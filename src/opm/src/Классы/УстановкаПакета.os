#Использовать logos
#Использовать tempfiles

Перем Лог;
Перем мВременныйКаталогУстановки;

Процедура УстановитьПакетИзАрхива(Знач ИмяПакета) Экспорт
	
	ПутьУстановки = НайтиСоздатьКаталогУстановки(ИмяПакета);
	
	мВременныйКаталогУстановки = ВременныеФайлы.СоздатьКаталог();
	
	Попытка
		Лог.Отладка("Открываем архив пакета");
		ЧтениеПакета = Новый ЧтениеZipФайла;
		ЧтениеПакета.Открыть(ИмяПакета);
		
		ФайлСодержимого = ИзвлечьОбязательныйФайл(ЧтениеПакета, Константы.ИмяФайлаСодержимогоПакета);
		ФайлМетаданных  = ИзвлечьОбязательныйФайл(ЧтениеПакета, Константы.ИмяФайлаМетаданныхПакета);
		
		СтандартнаяОбработка = Истина;
		УстановитьФайлыПакета(ПутьУстановки.ПолноеИмя, ФайлСодержимого, СтандартнаяОбработка);
		Если СтандартнаяОбработка Тогда
			СгенерироватьСкриптыЗапускаПриложенийПриНеобходимости(ПутьУстановки.ПолноеИмя, ФайлМетаданных);
		КонецЕсли;
		
		ЧтениеПакета.Закрыть();
		
		ВременныеФайлы.УдалитьФайл(мВременныйКаталогУстановки);
		
	Исключение
		ЧтениеПакета.Закрыть();
		ВременныеФайлы.УдалитьФайл(мВременныйКаталогУстановки);
		ВызватьИсключение;
	КонецПопытки;
	
	Лог.Отладка("Установка завершена");
	
КонецПроцедуры

Функция НайтиСоздатьКаталогУстановки(Знач ИмяПакета)
	
	СистемныеБиблиотеки = КаталогСистемныхБиблиотек();
	ФайлАрхива = Новый Файл(ИмяПакета);
	ИдентификаторПакета = ФайлАрхива.ИмяБезРасширения;
	
	ПутьУстановки = Новый Файл(ОбъединитьПути(СистемныеБиблиотеки, ИдентификаторПакета));
	Лог.Отладка("Путь установки пакета: " + ПутьУстановки.ПолноеИмя);
	
	Если Не ПутьУстановки.Существует() Тогда
		СоздатьКаталог(ПутьУстановки.ПолноеИмя);
	ИначеЕсли ПутьУстановки.ЭтоФайл() Тогда
		ВызватьИсключение "Не удалось создать каталог " + ПутьУстановки.ПолноеИмя;
	КонецЕсли;
	
	Возврат ПутьУстановки;
	
КонецФункции

Функция КаталогСистемныхБиблиотек()
	
	СистемныеБиблиотеки = ПолучитьЗначениеСистемнойНастройки("lib.system");
	Если СистемныеБиблиотеки = Неопределено Тогда
		ВызватьИсключение "Не определен каталог системных библиотек";
	КонецЕсли;
	
	Возврат СистемныеБиблиотеки;
	
КонецФункции

Процедура УстановитьФайлыПакета(Знач ПутьУстановки, Знач ФайлСодержимого, СтандартнаяОбработка)
	
	ЧтениеСодержимого = Новый ЧтениеZipФайла(ФайлСодержимого);
	Попытка	
		ИмяСкриптаУстановки = Константы.ИмяФайлаСкриптаУстановки;
		ЭлементСкриптаУстановки = ЧтениеСодержимого.Элементы.Найти(ИмяСкриптаУстановки);
		Если ЭлементСкриптаУстановки <> Неопределено Тогда
			Лог.Отладка("Найден скрипт установки пакета");
			
			ЧтениеСодержимого.Извлечь(ЭлементСкриптаУстановки, мВременныйКаталогУстановки, РежимВосстановленияПутейФайловZIP.НеВосстанавливать);
			Лог.Отладка("Компиляция скрипта установки пакета");
			ОбъектСкрипта = ЗагрузитьСценарий(ОбъединитьПути(мВременныйКаталогУстановки, ИмяСкриптаУстановки));
			
			ВызватьСобытиеПередУстановкой(ОбъектСкрипта, ЧтениеСодержимого, ПутьУстановки.ПолноеИмя, СтандартнаяОбработка);
			
			Если СтандартнаяОбработка Тогда
				
				Лог.Отладка("Устанавливаю файлы пакета из архива");
				ЧтениеСодержимого.ИзвлечьВсе(ПутьУстановки.ПолноеИмя);
				
				ВызватьСобытиеПриУстановке(ОбъектСкрипта, ПутьУстановки.ПолноеИмя, СтандартнаяОбработка);
				
			КонецЕсли;
		Иначе
			Лог.Отладка("Устанавливаю файлы пакета из архива");
			ЧтениеСодержимого.ИзвлечьВсе(ПутьУстановки.ПолноеИмя);
		КонецЕсли;
	Исключение
		ЧтениеСодержимого.Закрыть();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Процедура ВызватьСобытиеПередУстановкой(Знач ОбъектСкрипта, Знач АрхивПакета, Знач Каталог, СтандартнаяОбработка)
	Лог.Отладка("Вызываю событие ПередУстановкой");
	ОбъектСкрипта.ПередУстановкой(АрхивПакета, Каталог, СтандартнаяОбработка);
КонецПроцедуры

Процедура ВызватьСобытиеПриУстановке(Знач ОбъектСкрипта, Знач Каталог, СтандартнаяОбработка)
	Лог.Отладка("Вызываю событие ПриУстановке");
	ОбъектСкрипта.ПриУстановке(Каталог, СтандартнаяОбработка);
КонецПроцедуры

Процедура СгенерироватьСкриптыЗапускаПриложенийПриНеобходимости(Знач КаталогУстановки, Знач ФайлМетаданных)
	
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ФайлМетаданных);
	Чтение.ПерейтиКСодержимому();
	ИмяПакета = "";
	Пока Чтение.Прочитать() Цикл
		Если Чтение.ЛокальноеИмя = "name" и Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Лог.Отладка("Читаем имя пакета");
			ИмяПакета = ПолучитьТекстИзXML(Чтение);
			Лог.Отладка("Имя пакета = " + ИмяПакета);
		КонецЕсли;
		
		Если Чтение.ЛокальноеИмя = "executable" и Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Если ПустаяСтрока(ИмяПакета) Тогда
				Лог.Ошибка("Не определено имя пакета");
				ВызватьИсключение "Некорректные данные в метаданных пакета";
			КонецЕсли;
			
			ФайлПриложения = ПолучитьТекстИзXML(Чтение);
			Лог.Отладка("Прочитали приложение: " + ФайлПриложения);
			Если ФайлПриложения <> Неопределено Тогда
				Файл = Новый Файл(ОбъединитьПути(КаталогУстановки, ФайлПриложения));
				Если Не Файл.Существует() Тогда
					Лог.Ошибка("Файл приложения " + Файл.ПолноеИмя + " не существует");
					ВызватьИсключение "Некорректные данные в метаданных пакета";
				КонецЕсли;
				
				Каталог = КаталогПрограммы();
				СИ = Новый СистемнаяИнформация();
				Если Найти(СИ.ВерсияОС, "Windows") > 0 Тогда
					ФайлЗапуска = Новый ЗаписьТекста(ОбъединитьПути(Каталог, ИмяПакета + ".bat"), "cp866");
					ФайлЗапуска.ЗаписатьСтроку("@echo off");
					ФайлЗапуска.ЗаписатьСтроку("oscript.exe """ + Файл.ПолноеИмя + """ %*");
					ФайлЗапуска.Закрыть();
				Иначе
					// TODO: проверить
					ФайлЗапуска = Новый ЗаписьТекста(ОбъединитьПути(Каталог, ИмяПакета));
					ФайлЗапуска.ЗаписатьСтроку("#!/bin/bash");
					ФайлЗапуска.ЗаписатьСтроку("/usr/bin/oscript """ + Файл.ПолноеИмя + " $@""");
					ФайлЗапуска.Закрыть();
				КонецЕсли;
				
			Иначе
				Лог.Предупреждение("Узел executable не содержит пути к файлу");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТекстИзXML(Знач Чтение)
	ЕстьТекст = Чтение.Прочитать() и Чтение.ТипУзла = ТипУзлаXML.Текст;
	Если Не ЕстьТекст Тогда
		Возврат Неопределено;
	Иначе
		Возврат Чтение.Значение;
	КонецЕсли;
КонецФункции

//////////////////////////////////////////////////////////////////////////////////
//

Функция ИзвлечьОбязательныйФайл(Знач Чтение, Знач ИмяФайла)
	Элемент = Чтение.Элементы.Найти(ИмяФайла);
	Если Элемент = Неопределено Тогда
		ВызватьИсключение "Неверная структура пакета. Не найден файл " + ИмяФайла;
	КонецЕсли;
	
	Чтение.Извлечь(Элемент, мВременныйКаталогУстановки);
	
	Возврат ОбъединитьПути(мВременныйКаталогУстановки, ИмяФайла);
	
КонецФункции

Лог = Логирование.ПолучитьЛог("oscript.app.opm");