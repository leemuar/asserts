
#Использовать logos

Перем Лог;

Процедура ДобавитьОписанияКоманд(Знач Парсер) Экспорт
	ДобавитьКомандуBuild(Парсер);
	ДобавитьКомандуPrepare(Парсер);
	ДобавитьКомандуInstall(Парсер);
	ДобавитьКомандуUpdate(Парсер);
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
// Описания команд

Процедура ДобавитьКомандуPrepare(Знач Парсер)
	Команда = Парсер.ОписаниеКоманды("prepare");
	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "КаталогСборкиПакета");
	Парсер.ДобавитьКоманду(Команда);
КонецПроцедуры

Процедура ДобавитьКомандуBuild(Знач Парсер)
	Команда = Парсер.ОписаниеКоманды("build");
	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "КаталогИсходников");
	Парсер.ДобавитьИменованныйПараметрКоманды(Команда, "-mf");
	Парсер.ДобавитьИменованныйПараметрКоманды(Команда, "-out");
	Парсер.ДобавитьКоманду(Команда);
КонецПроцедуры

Процедура ДобавитьКомандуInstall(Знач Парсер)
	Команда = Парсер.ОписаниеКоманды("install");
	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "ИмяПакета");
	Парсер.ДобавитьКоманду(Команда);
КонецПроцедуры

Процедура ДобавитьКомандуUpdate(Знач Парсер)
	Команда = Парсер.ОписаниеКоманды("update");
	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "ИмяПакета");
	Парсер.ДобавитьКоманду(Команда);
КонецПроцедуры


Процедура ВыполнитьКоманду(Знач ПараметрыКоманды) Экспорт
	
	ЗначенияПараметров = ПараметрыКоманды.ЗначенияПараметров;
	Если ПараметрыКоманды.Команда = "build" Тогда
		ВыполнитьСборку(ЗначенияПараметров["КаталогИсходников"], ЗначенияПараметров["-mf"], ЗначенияПараметров["-out"]);
	ИначеЕсли ПараметрыКоманды.Команда = "prepare" Тогда
		ПодготовитьКаталогПроекта(ЗначенияПараметров["КаталогСборкиПакета"]);
	ИначеЕсли ПараметрыКоманды.Команда = "install" Тогда
		УстановитьПакет(ЗначенияПараметров["ИмяПакета"]);
	ИначеЕсли ПараметрыКоманды.Команда = "update" Тогда
		ОбновитьПакет(ЗначенияПараметров["ИмяПакета"]);
	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
// Реализация команд

Процедура УстановитьПакет(Знач ИмяПакета) Экспорт
	
	Установщик = Новый УстановкаПакета;
	
	Если Прав(НРег(ИмяПакета), 5) = ".ospx" Тогда
		Установщик.УстановитьПакетИзАрхива(ИмяПакета);
	Иначе
		Установщик.УстановитьПакетИзОблака(ИмяПакета);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьСборку(Знач КаталогИсходников, Знач ФайлМанифеста, Знач ВыходнойКаталог) Экспорт
	
	Сборщик = Новый СборщикПакета();
	Сборщик.СобратьПакет(КаталогИсходников, ФайлМанифеста, ВыходнойКаталог);
	
КонецПроцедуры

Процедура ПодготовитьКаталогПроекта(Знач ВыходнойКаталог) Экспорт
	
	Сборщик = Новый СборщикПакета();
	Сборщик.ПодготовитьКаталогПроекта(ВыходнойКаталог);
	
КонецПроцедуры

Процедура ОбновитьПакет(Знач ИмяПакета) Экспорт
	
	Установщик = Новый УстановкаПакета;
	
	Установщик.ОбновитьПакетИзОблака(ИмяПакета);
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////

Лог = Логирование.ПолучитьЛог("oscript.app.opm");