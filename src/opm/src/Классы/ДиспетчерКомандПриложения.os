
#Использовать logos

Перем Лог;

Процедура ДобавитьОписанияКоманд(Знач Парсер) Экспорт
	ДобавитьКомандуBuild(Парсер);
	ДобавитьКомандуPrepare(Парсер);
	ДобавитьКомандуInstall(Парсер);
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
// Описания команд

Процедура ДобавитьКомандуPrepare(Знач Парсер)
	Команда = Парсер.ОписаниеКоманды("prepare");
	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "КаталогСборкиПакета");
	Парсер.ДобавитьКоманду(Команда);
КонецПроцедуры

Процедура ДобавитьКомандуBuild(Знач Парсер)
	Команда = Парсер.ОписаниеКоманды("build");
	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "КаталогИсходников");
	Парсер.ДобавитьИменованныйПараметрКоманды(Команда, "-mf");
	Парсер.ДобавитьИменованныйПараметрКоманды(Команда, "-out");
	Парсер.ДобавитьКоманду(Команда);
КонецПроцедуры

Процедура ДобавитьКомандуInstall(Знач Парсер)
	Команда = Парсер.ОписаниеКоманды("install");
	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "ИмяПакета");
	Парсер.ДобавитьКоманду(Команда);
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
// Реализация команд

Процедура УстановитьПакет(Знач ИмяПакета) Экспорт
	
	Установщик = Новый УстановкаПакета;
	
	Если Прав(НРег(ИмяПакета), 5) = ".ospx" Тогда
		Установщик.УстановитьПакетИзАрхива(ИмяПакета);
	Иначе
		Установщик.УстановитьПакетИзОблака(ИмяПакета);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьСборку(Знач КаталогИсходников, Знач ФайлМанифеста, Знач ВыходнойКаталог) Экспорт
	
	Сборщик = Новый СборщикПакета();
	Сборщик.СобратьПакет(КаталогИсходников, ФайлМанифеста, ВыходнойКаталог);
	
КонецПроцедуры

Процедура ПодготовитьКаталогПроекта(Знач ВыходнойКаталог) Экспорт
	
	Если ВыходнойКаталог = Неопределено Тогда
		ВыходнойКаталог = ТекущийКаталог();
	КонецЕсли;

	ВыходнойКаталог = Новый Файл(ВыходнойКаталог);
	
	ИмяПакета = ВыходнойКаталог.Имя;

	Если Не ВыходнойКаталог.Существует() Тогда
		Сообщить("Создаю каталог " + ИмяПакета);
		СоздатьКаталог(ВыходнойКаталог.ПолноеИмя);
	Иначе
		Содержимое = НайтиФайлы(ВыходнойКаталог.ПолноеИмя, ПолучитьМаскуВсеФайлы());
		Если Содержимое.Количество() Тогда
			ВызватьИсключение "Каталог проекта " + ВыходнойКаталог.ПолноеИмя + " уже содержит файлы!";
		КонецЕсли;
	КонецЕсли;
	
	СоздатьПодкаталог(ВыходнойКаталог.ПолноеИмя, "src");
	СоздатьПодкаталог(ВыходнойКаталог.ПолноеИмя, "tests");
	СоздатьПодкаталог(ВыходнойКаталог.ПолноеИмя, "docs");
	
	ЗаписатьЗаготовкуСкриптаУстановки(ВыходнойКаталог.ПолноеИмя);
	ЗаписатьЗаготовкуМанифестаБиблиотеки(ВыходнойКаталог.ПолноеИмя, ИмяПакета);

	Сообщить("Готово");
	
КонецПроцедуры

Процедура СоздатьПодкаталог(Знач База, Знач Имя)
	Сообщить("Создаю каталог " + Имя);
	СоздатьКаталог(ОбъединитьПути(База, Имя));
КонецПроцедуры

Процедура ЗаписатьЗаготовкуСкриптаУстановки(Знач Каталог)

	Сообщить("Создаю заготовку скрипта установки/удаления");

	ИмяФайла = ОбъединитьПути(Каталог, Константы.ИмяФайлаСкриптаУстановки);
	ЗаписьТекста = Новый ЗаписьТекста(ИмяФайла);
	ЗаписьТекста.ЗаписатьСтроку("///////////////////////////////////////////////////////////////////");
	ЗаписьТекста.ЗаписатьСтроку("// Сценарий установки и удаления пакета с клиентской машины        ");
	ЗаписьТекста.ЗаписатьСтроку("///////////////////////////////////////////////////////////////////
	|
	|");
	
	ЗаписьТекста.ЗаписатьСтроку("// Вызывается пакетным менеджером перед установкой пакета на клиентскую машину.");
	ЗаписьТекста.ЗаписатьСтроку("// ");
	ЗаписьТекста.ЗаписатьСтроку("// Параметры:");
	ЗаписьТекста.ЗаписатьСтроку("//   АрхивПакета - ЧтениеZipФайла. Открытый архив пакета.");
	ЗаписьТекста.ЗаписатьСтроку("//   КаталогУстановкиПакета - строка. Путь в который пакетный менеджер устанавливает текущий пакет.");
	ЗаписьТекста.ЗаписатьСтроку("// ");
	ЗаписьТекста.ЗаписатьСтроку("Процедура ПередУстановкой(Знач АрхивПакета, Знач КаталогУстановкиПакета, СтандартнаяОбработка) Экспорт");
	ЗаписьТекста.ЗаписатьСтроку("	// TODO: Реализуйте спец. логику установки, если требуется");
	ЗаписьТекста.ЗаписатьСтроку("КонецПроцедуры");
	ЗаписьТекста.ЗаписатьСтроку(Символы.ПС);
	
	ЗаписьТекста.ЗаписатьСтроку("// Вызывается пакетным менеджером после распаковки пакета на клиентскую машину.");
	ЗаписьТекста.ЗаписатьСтроку("// ");
	ЗаписьТекста.ЗаписатьСтроку("// Параметры:");
	ЗаписьТекста.ЗаписатьСтроку("//   КаталогУстановкиПакета - строка. Путь в который пакетный менеджер устанавливает текущий пакет.");
	ЗаписьТекста.ЗаписатьСтроку("// ");
	ЗаписьТекста.ЗаписатьСтроку("Процедура ПриУстановке(Знач КаталогУстановкиПакета, СтандартнаяОбработка) Экспорт");
	ЗаписьТекста.ЗаписатьСтроку("	// TODO: Реализуйте спец. логику установки, если требуется");
	ЗаписьТекста.ЗаписатьСтроку("КонецПроцедуры");
	ЗаписьТекста.ЗаписатьСтроку(Символы.ПС);
	
	ЗаписьТекста.ЗаписатьСтроку("// Вызывается пакетным менеджером при удалении пакета с клиентской машины.");
	ЗаписьТекста.ЗаписатьСтроку("// ");
	ЗаписьТекста.ЗаписатьСтроку("// Параметры:");
	ЗаписьТекста.ЗаписатьСтроку("//   КаталогУстановкиПакета - строка. Каталог в который установлен пакет.");
	ЗаписьТекста.ЗаписатьСтроку("// ");
	ЗаписьТекста.ЗаписатьСтроку("Процедура ПриУдалении(Знач КаталогУстановкиПакета) Экспорт");
	ЗаписьТекста.ЗаписатьСтроку("	// TODO: Реализуйте спец. логику удаления, если требуется");
	ЗаписьТекста.ЗаписатьСтроку("КонецПроцедуры");
	
	ЗаписьТекста.Закрыть();

КонецПроцедуры

Процедура ЗаписатьЗаготовкуМанифестаБиблиотеки(Знач Каталог, Знач ИмяПакета)
	
	Сообщить("Создаю заготовку описания пакета");
	
	ЗаписьТекста = Новый ЗаписьТекста(ОбъединитьПути(Каталог, Константы.ИмяФайлаСпецификацииПакета));
	
	ЗаписьТекста.ЗаписатьСтроку("////////////////////////////////////////////////////////////");
	ЗаписьТекста.ЗаписатьСтроку("// Описание пакета для сборки и установки");
	ЗаписьТекста.ЗаписатьСтроку("// Полную документацию см. на hub.oscript.io/packaging");
	ЗаписьТекста.ЗаписатьСтроку("//");
	
	ЗаписьТекста.ЗаписатьСтроку("
	|	Описание.Имя("""+ИмяПакета+""")
	|			.Версия(""1.0.1"")
	|			.Автор("""")
	|			.АдресАвтора(""author@somemail.com"")
	|			.Описание(""Это очень хороший и нужный пакет программ"")
	|			.ВерсияСреды(""1.0.11"")
	|			.ВключитьФайл(""src"")
	|			.ВключитьФайл(""doc"")
	|			.ВключитьФайл(""tests"")
	|			.ВключитьФайл("""+Константы.ИмяФайлаСкриптаУстановки+""")
	|			//.ЗависитОт(""package1"", "">=2.0"")
	|			//.ЗависитОт(""package2"", "">=1.1"", ""<2.0"")
	|			//.ОпределяетКласс(""УправлениеВселенной"", ""src/universe-mngr.os"")
	|			//.ОпределяетМодуль(""ПолезныеФункции"", ""src/tools.os"")
	|			;");
	
	ЗаписьТекста.Закрыть();
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
// Вспомогательные функции

Функция КаталогСкрипта()
	
	Возврат (Новый Файл(ТекущийСценарий().Источник)).Путь;
	
КонецФункции

Лог = Логирование.ПолучитьЛог("oscript.app.opm");