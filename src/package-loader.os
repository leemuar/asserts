
Процедура ПриЗагрузкеБиблиотеки(Путь, СтандартнаяОбработка, Отказ)
	
	ФайлМанифеста = Новый Файл(ОбъединитьПути(Путь, "lib.config"));
	
	Если ФайлМанифеста.Существует() Тогда
		СтандартнаяОбработка = Ложь;
		ОбработатьМанифест(ФайлМанифеста.ПолноеИмя, Путь, Отказ);
	ИначеЕсли ЕстьПредопределенныеКаталоги(Путь) Тогда
		СтандартнаяОбработка = Ложь;
		ЗагрузитьИзПредопределенныхКаталогов(Путь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьМанифест(Знач Файл, Знач Путь, Отказ)
	
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(Файл);
	Чтение.ПерейтиКСодержимому();
	
	Если Чтение.ЛокальноеИмя <> "package-def" Тогда
		Отказ = Истина;
		Чтение.Закрыть();
		Возврат;
	КонецЕсли;
	
	Пока Чтение.Прочитать() и Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Цикл
		
		Если Чтение.ЛокальноеИмя = "class" Тогда
			ФайлКласса = Новый Файл(Путь + "/" + Чтение.ЗначениеАтрибута("file"));
			Если ФайлКласса.Существует() и ФайлКласса.ЭтоФайл() Тогда
				Идентификатор = Чтение.ЗначениеАтрибута("name");
				Если Не ПустаяСтрока(Идентификатор) Тогда
					ДобавитьКласс(ФайлКласса.ПолноеИмя, Идентификатор);
				КонецЕсли;
			Иначе
				ВызватьИсключение "Не найден файл " + ФайлКласса.ПолноеИмя + ", указанный в манифесте";
			КонецЕсли;
			
			Чтение.Прочитать(); // в конец элемента
		КонецЕсли;

		Если Чтение.ЛокальноеИмя = "module" Тогда
			ФайлКласса = Новый Файл(Путь + "/" + Чтение.ЗначениеАтрибута("file"));
			Если ФайлКласса.Существует() и ФайлКласса.ЭтоФайл() Тогда
				Идентификатор = Чтение.ЗначениеАтрибута("name");
				Если Не ПустаяСтрока(Идентификатор) Тогда
					ДобавитьМодуль(ФайлКласса.ПолноеИмя, Идентификатор);
				КонецЕсли;
			Иначе
				ВызватьИсключение "Не найден файл " + ФайлКласса.ПолноеИмя + ", указанный в манифесте";
			КонецЕсли;
			
			Чтение.Прочитать(); // в конец элемента
		КонецЕсли;
		
	КонецЦикла;
	
	Чтение.Закрыть();
	
КонецПроцедуры

Функция ЕстьПредопределенныеКаталоги(Знач Путь)
	
	Возврат КаталогСуществует(Путь, "Классы")
			или КаталогСуществует(Путь, "Модули");
	
КонецФункции

Функция КаталогСуществует(Знач Путь, Знач Каталог)
	ОбъектКаталог = Новый Файл(ОбъединитьПути(Путь, Каталог));
	Возврат ОбъектКаталог.Существует() и ОбъектКаталог.ЭтоКаталог();
КонецФункции

Процедура ЗагрузитьИзПредопределенныхКаталогов(Знач КаталогПриложения)

	КаталогКлассов = ОбъединитьПути(КаталогПриложения, "Классы");
	Файлы = НайтиФайлы(КаталогКлассов, "*.os");
	Для Каждого Файл Из Файлы Цикл
		ДобавитьКласс(Файл.ПолноеИмя, Файл.ИмяБезРасширения);
	КонецЦикла;
	
	КаталогМодулей = ОбъединитьПути(КаталогПриложения, "Модули");
	Файлы = НайтиФайлы(КаталогМодулей, "*.os");
	Для Каждого Файл Из Файлы Цикл
		ДобавитьМодуль(Файл.ПолноеИмя, Файл.ИмяБезРасширения);
	КонецЦикла;

КонецПроцедуры
