#Использовать logos

Перем Лог;
Перем мПараметры;
Перем мКоманды;

Процедура ДобавитьПараметр(ИмяПараметра) Экспорт
	Лог.Отладка("ДобавитьПараметр: ИмяПараметра <"+ИмяПараметра+">");		
	
	Ключ = Строка(ИмяПараметра);
	мПараметры.Вставить(Ключ, Ключ);
КонецПроцедуры

Функция ОписаниеКоманды(Знач ИмяКоманды) Экспорт
	
	НовоеОписание = Новый Структура;
	НовоеОписание.Вставить("Команда", ИмяКоманды);
	НовоеОписание.Вставить("ПозиционныеПараметры", Новый Массив);
	НовоеОписание.Вставить("ИменованныеПараметры", Новый Соответствие);
	
	Возврат НовоеОписание;
	
КонецФункции

Процедура ДобавитьКоманду(Знач ОписаниеКоманды) Экспорт
	
	мКоманды.Вставить(ОписаниеКоманды.Команда, ОписаниеКоманды);
	
КонецПроцедуры

Процедура ДобавитьПозиционныйПараметр(Знач ОписаниеКоманды, Знач ИмяПараметра) Экспорт
	ОписаниеКоманды.ПозиционныеПараметры.Добавить(ИмяПараметра);
КонецПроцедуры

Процедура ДобавитьИменованныйПараметр(Знач ОписаниеКоманды, Знач ИмяПараметра) Экспорт
	ОписаниеКоманды.ИменованныеПараметры.Вставить(ИмяПараметра, ИмяПараметра);
КонецПроцедуры

Функция РазобратьКоманду(Знач МассивПараметров) Экспорт
	
	Если МассивПараметров.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОписаниеКоманды = мКоманды[МассивПараметров[0]];
	Если ОписаниеКоманды = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РезультатКоманды = Новый Структура;
	РезультатКоманды.Вставить("Команда", ОписаниеКоманды.Команда);
	РезультатКоманды.Вставить("ПозиционныеПараметры", Новый Соответствие);
	РезультатКоманды.Вставить("ИменованныеПараметры", Новый Соответствие);
	
	ВсегоПараметров = МассивПараметров.Количество()-1; // за вычетом самой команды
	
	Для Сч = 0 По ОписаниеКоманды.ПозиционныеПараметры.Количество() - 1 Цикл
		
		Ключ = ОписаниеКоманды.ПозиционныеПараметры[Сч];
		Поз = Сч + 1;
		Если ВсегоПараметров <= Сч Тогда
			Лог.Ошибка("Ожидался параметр <" + Ключ + "> в позиции " + Поз);
			Возврат Неопределено;
		КонецЕсли;
		
		Значение = МассивПараметров[Поз];
		Лог.Отладка("Найден позиционный параметр <"+Ключ+"> со значением <" + Значение + ">");
		РезультатКоманды.ПозиционныеПараметры.Вставить(Ключ, Значение);
		
	КонецЦикла;
	
	МассивИменованных = Новый Массив;
	Для Сч = ОписаниеКоманды.ПозиционныеПараметры.Количество()+1 По МассивПараметров.Количество()-1 Цикл
		Лог.Отладка("Подготовили к разбору именованный параметр " + МассивПараметров[Сч]);
		МассивИменованных.Добавить(МассивПараметров[Сч]);
	КонецЦикла;
	Лог.Отладка("Всего именованных параметров " + МассивИменованных.Количество());
	РезультатКоманды.ИменованныеПараметры = РазобратьИменованныеПараметры(ОписаниеКоманды.ИменованныеПараметры, МассивИменованных);
	
	Возврат РезультатКоманды;
	
КонецФункции

Функция Разобрать(ВходнойМассивПараметров) Экспорт
	Возврат РазобратьИменованныеПараметры(мПараметры, ВходнойМассивПараметров);
КонецФункции

Функция РазобратьИменованныеПараметры(Знач ОписаниеПараметров, Знач ВходнойМассивПараметров)
	Рез = Новый Соответствие;
	
	Если Лог.Уровень() = УровниЛога.Отладка Тогда
		Строка = "";
		Для Каждого Параметр Из ВходнойМассивПараметров Цикл
			Строка = Строка + Параметр + " ";
		КонецЦикла;
		Лог.Отладка("ВходнойМассивПараметров <"+СокрЛП(Строка)+">");
	КонецЕсли;
	
	Для Сч=0 по ВходнойМассивПараметров.Количество()-1 Цикл
		Параметр = ВходнойМассивПараметров[Сч];
		Лог.Отладка("Разобрать: очередной параметр <"+Параметр+">");		
		
		КлючЗначение = ОписаниеПараметров.Получить(Параметр);
		Если КлючЗначение = Неопределено Тогда
			Лог.Отладка("Разобрать: не нашли значение параметра <"+Параметр+">");		
			Продолжить;
		КонецЕсли;
		Значение = ?(Сч < (ВходнойМассивПараметров.Количество()-1), ВходнойМассивПараметров[Сч+1], Истина);
		Лог.Отладка("Разобрать: нашли значение параметра <"+Параметр+"> = <"+Значение+">");		
		Рез.Вставить(Параметр, Значение);
	КонецЦикла;
	
	Возврат Рез;
КонецФункции

Процедура УстановитьЛоггер(НовыйЛог) Экспорт
	Лог = НовыйЛог;
КонецПроцедуры

Процедура Инит()
	ПодключитьЛоггер();
	мПараметры = Новый Соответствие;
	мКоманды   = Новый Соответствие;
КонецПроцедуры

Процедура ПодключитьЛоггер()
	Лог = Новый Лог();
КонецПроцедуры

Инит();
