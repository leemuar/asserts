#Использовать logos
#Использовать ".."

Перем ПарсерКомаднойСтроки;
Перем КаталогИсходников;

Перем юТест;
Перем РаботаСТестами;
Перем Лог;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт

	юТест = Тестирование;
	
	СписокТестов = Новый Массив;
	
	СписокТестов.Добавить("ТестДолжен_ПолучитьПараметрИЗначение");
	СписокТестов.Добавить("ТестДолжен_ПолучитьНесколькихПараметровИЗначений");
	СписокТестов.Добавить("ТестДолжен_ПолучитьПараметрыКоманды");

	Возврат СписокТестов;
	
КонецФункции

Процедура ПередЗапускомТеста() Экспорт
	
	ПарсерКомаднойСтроки = Новый ПарсерАргументовКоманднойСтроки;

	Лог = Новый Лог();
	ПарсерКомаднойСтроки.УстановитьЛоггер(Лог);
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	ПарсерКомаднойСтроки = Неопределено;
	юТест.УдалитьВременныеФайлы();
	
КонецПроцедуры

Процедура ТестДолжен_ПолучитьПараметрИЗначение() Экспорт
	Лог.УстановитьУровень(УровниЛога.Отладка);

	// строка запуска - oscript test.os Параметр Значение или oscript test.os "Параметр" "Значение"
	ВходнойМассивПараметров = Новый Массив;
	ВходнойМассивПараметров.Добавить("Параметр");
	ВходнойМассивПараметров.Добавить("Значение");
	
	ПарсерКомаднойСтроки.ДобавитьПараметр("Параметр");

	Коллекция = ПарсерКомаднойСтроки.Разобрать(ВходнойМассивПараметров); //АргументыКоманднойСтроки);

	юТест.ПроверитьРавенство(1, Коллекция.Количество());
	юТест.ПроверитьРавенство("Значение", Коллекция.Получить("Параметр"));
	юТест.ПроверитьРавенство("Значение", Коллекция["Параметр"]);
	
КонецПроцедуры

Процедура ТестДолжен_ПолучитьНесколькихПараметровИЗначений() Экспорт

	НаборПараметров = Новый Соответствие;
	НаборПараметров.Вставить("--Команда1", "Значение11");
	НаборПараметров.Вставить("Команда2", "Значение22");
	НаборПараметров.Вставить("-Команда3", "Значение31");
	
	ВходнойМассивПараметров = Новый Массив;
	Для Каждого КлючЗначение Из НаборПараметров Цикл
		ВходнойМассивПараметров.Добавить(КлючЗначение.Ключ);
		ВходнойМассивПараметров.Добавить(КлючЗначение.Значение);

		ПарсерКомаднойСтроки.ДобавитьПараметр(КлючЗначение.Ключ);
	КонецЦикла;
	
	Коллекция = ПарсерКомаднойСтроки.Разобрать(ВходнойМассивПараметров);

	юТест.ПроверитьРавенство(НаборПараметров.Количество(), Коллекция.Количество());
	Для Каждого КлючЗначение Из НаборПараметров Цикл
		юТест.ПроверитьРавенство(КлючЗначение.Значение, Коллекция.Получить(КлючЗначение.Ключ));
		юТест.ПроверитьРавенство(КлючЗначение.Значение, Коллекция[КлючЗначение.Ключ]);
	КонецЦикла;
	
КонецПроцедуры

Процедура ТестДолжен_ПолучитьПараметрыКоманды() Экспорт
	
	Лог.УстановитьУровень(УровниЛога.Отладка);
	
	ОписаниеКоманды = ПарсерКомаднойСтроки.ОписаниеКоманды("test");
	
	ПарсерКомаднойСтроки.ДобавитьПозиционныйПараметр(ОписаниеКоманды, "testpath");
	ПарсерКомаднойСтроки.ДобавитьИменованныйПараметр(ОписаниеКоманды, "mode");
	ПарсерКомаднойСтроки.ДобавитьИменованныйПараметр(ОписаниеКоманды, "output");
	ПарсерКомаднойСтроки.ДобавитьКоманду(ОписаниеКоманды);
	
	ВходнойМассивПараметров = Новый Массив;
	ВходнойМассивПараметров.Добавить("test");
	ВходнойМассивПараметров.Добавить("testpath-value");
	ВходнойМассивПараметров.Добавить("mode");
	ВходнойМассивПараметров.Добавить("1");
	ВходнойМассивПараметров.Добавить("output");
	ВходнойМассивПараметров.Добавить("2");
	
	Результат = ПарсерКомаднойСтроки.РазобратьКоманду(ВходнойМассивПараметров);
	юТест.ПроверитьНеравенство(Неопределено, Результат, "Команда должна быть разобрана правильно");
	юТест.ПроверитьРавенство("test", Результат.Команда, "Команда");
	юТест.ПроверитьРавенство("testpath-value", Результат.ПозиционныеПараметры["testpath"], "Значение позиционного параметра");
	юТест.ПроверитьРавенство(1, Результат.ПозиционныеПараметры.Количество(), "Количество позиционных параметров");
	юТест.ПроверитьРавенство("1", Результат.ИменованныеПараметры["mode"], "Именованный ключ mode");
	юТест.ПроверитьРавенство("2", Результат.ИменованныеПараметры["output"], "Именованный ключ output");
	юТест.ПроверитьРавенство(2, Результат.ИменованныеПараметры.Количество());
	
КонецПроцедуры
